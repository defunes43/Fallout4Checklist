<UserControl x:Class="Fallout4Checklist.Views.QuestListItemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Fallout4Checklist.Views"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:c="clr-namespace:Fallout4Checklist.Controls"
             mc:Ignorable="d" 
             Foreground="{StaticResource DarkGray}">
    <DockPanel LastChildFill="True">
        <c:HoverCheckBox Style="{StaticResource SquareCheckButton}"
                         Background="{StaticResource LightGray}"
                         HoverBackground="{StaticResource LightGrayMouseOver}"
                         CornerRadius="5, 0, 0, 5"
                         Margin="0, 0, .5, 0"
                         Foreground="{StaticResource DarkGray}" />
        
        <Border CornerRadius="0, 5, 5, 0"
            cal:Message.Attach="[Event PreviewMouseDown] = [Action QuestClicked()]">
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Quest.IsChecked}" Value="True">
                            <Setter Property="Background" Value="{StaticResource CollectedColor}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Quest.IsChecked}" Value="False">
                            <Setter Property="Background" Value="{StaticResource LightGray}" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Quest.IsChecked}" Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LightGrayMouseOver}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Quest.IsChecked}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource CollectedColorMouseOver}" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <Border Padding="5, 5, 5, 0">
                <StackPanel>
                    <DockPanel Margin="0, 0, 0, 5">
                        <TextBlock FontWeight="Bold" Text="{Binding Quest.Name}" />
                        <TextBlock FontWeight="Bold" Text="{Binding Quest.XPReward}" HorizontalAlignment="Right" />
                    </DockPanel>

                    <ItemsControl ItemsSource="{Binding Rewards}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ContentControl Margin="0, 0, 0, 5" cal:View.Model="{Binding}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </Border>
        </Border>
    </DockPanel>
</UserControl>
